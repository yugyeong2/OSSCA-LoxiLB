// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swaggertest/models"
)

// GetAccountAllOKCode is the HTTP code returned for type GetAccountAllOK
const GetAccountAllOKCode int = 200

/*
GetAccountAllOK OK

swagger:response getAccountAllOK
*/
type GetAccountAllOK struct {

	/*
	  In: Body
	*/
	Payload *GetAccountAllOKBody `json:"body,omitempty"`
}

// NewGetAccountAllOK creates GetAccountAllOK with default headers values
func NewGetAccountAllOK() *GetAccountAllOK {

	return &GetAccountAllOK{}
}

// WithPayload adds the payload to the get account all o k response
func (o *GetAccountAllOK) WithPayload(payload *GetAccountAllOKBody) *GetAccountAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get account all o k response
func (o *GetAccountAllOK) SetPayload(payload *GetAccountAllOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccountAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAccountAllUnauthorizedCode is the HTTP code returned for type GetAccountAllUnauthorized
const GetAccountAllUnauthorizedCode int = 401

/*
GetAccountAllUnauthorized Invalid authentication credentials

swagger:response getAccountAllUnauthorized
*/
type GetAccountAllUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAccountAllUnauthorized creates GetAccountAllUnauthorized with default headers values
func NewGetAccountAllUnauthorized() *GetAccountAllUnauthorized {

	return &GetAccountAllUnauthorized{}
}

// WithPayload adds the payload to the get account all unauthorized response
func (o *GetAccountAllUnauthorized) WithPayload(payload *models.Error) *GetAccountAllUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get account all unauthorized response
func (o *GetAccountAllUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccountAllUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAccountAllInternalServerErrorCode is the HTTP code returned for type GetAccountAllInternalServerError
const GetAccountAllInternalServerErrorCode int = 500

/*
GetAccountAllInternalServerError Internal service error

swagger:response getAccountAllInternalServerError
*/
type GetAccountAllInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAccountAllInternalServerError creates GetAccountAllInternalServerError with default headers values
func NewGetAccountAllInternalServerError() *GetAccountAllInternalServerError {

	return &GetAccountAllInternalServerError{}
}

// WithPayload adds the payload to the get account all internal server error response
func (o *GetAccountAllInternalServerError) WithPayload(payload *models.Error) *GetAccountAllInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get account all internal server error response
func (o *GetAccountAllInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccountAllInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAccountAllServiceUnavailableCode is the HTTP code returned for type GetAccountAllServiceUnavailable
const GetAccountAllServiceUnavailableCode int = 503

/*
GetAccountAllServiceUnavailable Maintanence mode

swagger:response getAccountAllServiceUnavailable
*/
type GetAccountAllServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAccountAllServiceUnavailable creates GetAccountAllServiceUnavailable with default headers values
func NewGetAccountAllServiceUnavailable() *GetAccountAllServiceUnavailable {

	return &GetAccountAllServiceUnavailable{}
}

// WithPayload adds the payload to the get account all service unavailable response
func (o *GetAccountAllServiceUnavailable) WithPayload(payload *models.Error) *GetAccountAllServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get account all service unavailable response
func (o *GetAccountAllServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAccountAllServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
