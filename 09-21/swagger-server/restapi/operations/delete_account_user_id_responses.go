// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swaggertest/models"
)

// DeleteAccountUserIDNoContentCode is the HTTP code returned for type DeleteAccountUserIDNoContent
const DeleteAccountUserIDNoContentCode int = 204

/*
DeleteAccountUserIDNoContent OK

swagger:response deleteAccountUserIdNoContent
*/
type DeleteAccountUserIDNoContent struct {
}

// NewDeleteAccountUserIDNoContent creates DeleteAccountUserIDNoContent with default headers values
func NewDeleteAccountUserIDNoContent() *DeleteAccountUserIDNoContent {

	return &DeleteAccountUserIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteAccountUserIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteAccountUserIDBadRequestCode is the HTTP code returned for type DeleteAccountUserIDBadRequest
const DeleteAccountUserIDBadRequestCode int = 400

/*
DeleteAccountUserIDBadRequest Malformed arguments for API call

swagger:response deleteAccountUserIdBadRequest
*/
type DeleteAccountUserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAccountUserIDBadRequest creates DeleteAccountUserIDBadRequest with default headers values
func NewDeleteAccountUserIDBadRequest() *DeleteAccountUserIDBadRequest {

	return &DeleteAccountUserIDBadRequest{}
}

// WithPayload adds the payload to the delete account user Id bad request response
func (o *DeleteAccountUserIDBadRequest) WithPayload(payload *models.Error) *DeleteAccountUserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete account user Id bad request response
func (o *DeleteAccountUserIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAccountUserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
