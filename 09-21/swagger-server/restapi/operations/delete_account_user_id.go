// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteAccountUserIDHandlerFunc turns a function with the right signature into a delete account user ID handler
type DeleteAccountUserIDHandlerFunc func(DeleteAccountUserIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAccountUserIDHandlerFunc) Handle(params DeleteAccountUserIDParams) middleware.Responder {
	return fn(params)
}

// DeleteAccountUserIDHandler interface for that can handle valid delete account user ID params
type DeleteAccountUserIDHandler interface {
	Handle(DeleteAccountUserIDParams) middleware.Responder
}

// NewDeleteAccountUserID creates a new http.Handler for the delete account user ID operation
func NewDeleteAccountUserID(ctx *middleware.Context, handler DeleteAccountUserIDHandler) *DeleteAccountUserID {
	return &DeleteAccountUserID{Context: ctx, Handler: handler}
}

/*
	DeleteAccountUserID swagger:route DELETE /account/{user_id} deleteAccountUserId

# Delete one user

Delete one user.
*/
type DeleteAccountUserID struct {
	Context *middleware.Context
	Handler DeleteAccountUserIDHandler
}

func (o *DeleteAccountUserID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteAccountUserIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
