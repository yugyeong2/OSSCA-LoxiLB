// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swaggertest/models"
)

// PostAccountOKCode is the HTTP code returned for type PostAccountOK
const PostAccountOKCode int = 200

/*
PostAccountOK OK

swagger:response postAccountOK
*/
type PostAccountOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostSuccess `json:"body,omitempty"`
}

// NewPostAccountOK creates PostAccountOK with default headers values
func NewPostAccountOK() *PostAccountOK {

	return &PostAccountOK{}
}

// WithPayload adds the payload to the post account o k response
func (o *PostAccountOK) WithPayload(payload *models.PostSuccess) *PostAccountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post account o k response
func (o *PostAccountOK) SetPayload(payload *models.PostSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAccountBadRequestCode is the HTTP code returned for type PostAccountBadRequest
const PostAccountBadRequestCode int = 400

/*
PostAccountBadRequest Malformed arguments for API call

swagger:response postAccountBadRequest
*/
type PostAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAccountBadRequest creates PostAccountBadRequest with default headers values
func NewPostAccountBadRequest() *PostAccountBadRequest {

	return &PostAccountBadRequest{}
}

// WithPayload adds the payload to the post account bad request response
func (o *PostAccountBadRequest) WithPayload(payload *models.Error) *PostAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post account bad request response
func (o *PostAccountBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
